annotation_row = rowAnno,
cluster_rows = FALSE,
clustering_method = "ward.D2",
color = colorRampPalette(c(colList[2],"white",colList[1]))(100),
breaks = seq(-5,5, length.out = 101), annotation_colors = annoCol,
show_rownames = TRUE, show_colnames = FALSE,
treeheight_row = 0, silent = TRUE)$gtable
plot_grid(tri19Heatmap)
plotTab <- filter(resList, adj.P.Val <=0.05) %>% mutate(change = ifelse(logFC>0,"Up regulated","Down regulated"),
chromosome = ifelse(Chr %in% "19","chr19","other")) %>%
group_by(change, chromosome) %>% summarise(n = length(id)) %>%
bind_rows(tibble(change = "Down regulated", chromosome = "chr19",  n =0))
sigNumPlot <- ggplot(plotTab, aes(x=change, y=n, fill = chromosome)) +
geom_bar(stat = "identity", width = 0.8,
position = position_dodge2(width = 6),
col = "black") +
geom_text(aes(label=n),
position = position_dodge(width = 0.9),
size=4, hjust=-0.1)  +
scale_fill_manual(name = "", labels = c("chr19","other"), values = colList) +
coord_flip(ylim = c(0,35), expand = FALSE) + xlab("") + ylab("Number of significant associations (10% FDR)") + theme_half
sigNumPlot
gmts = list(H= "../data/gmts/h.all.v6.2.symbols.gmt",
KEGG = "../data/gmts/c2.cp.kegg.v6.2.symbols.gmt",
GO = "../data/gmts/c5.bp.v6.2.symbols.gmt")
inputTab <- resList %>% filter(P.Value < 0.05) %>%
mutate(name = rowData(protCLL[id,])$hgnc_symbol) %>% filter(!is.na(name)) %>%
distinct(name, .keep_all = TRUE) %>%
select(name, t) %>% data.frame() %>% column_to_rownames("name")
enRes <- list()
enRes[["Proteins associated with trisomy19"]] <- runGSEA(inputTab, gmts$H, "page")
p <- plotEnrichmentBar(enRes[[1]], pCut =0.05, ifFDR= TRUE, setName = "HALLMARK gene set",
title = names(enRes)[1], removePrefix = "HALLMARK_", insideLegend=TRUE)
tri19Enrich <- cowplot::plot_grid(p)
tri19Enrich
plotTab <- resList %>% mutate(onChr19 = ifelse(Chr %in% "19","yes","no"))
#nameList <- filter(resList, adj.P.Val <=0.1)$name
nameList <- c("GPI","CALR","RRAS","RANBP3","EIF4EBP1","POU2F2")
tri19Volcano <- plotVolcano(plotTab, fdrCut =0.05, x_lab="log2FoldChange", posCol = colList[1], negCol = colList[2],
plotTitle = "trisomy19", ifLabel = TRUE, labelList = nameList)
tri19Volcano
nameList <- c("GPI","RANBP3","CALR","POU2F2")
protSub <- protCLL[, protCLL$IGHV.status %in% "M" & protCLL$trisomy12 %in% 1]
protTab <- sumToTidy(protSub, rowID = "uniprotID", colID = "patID")
resList.sig <- filter(resList, adj.P.Val < 0.1)
#nameList <- resList.sig$name[1:10]
plotTab <- protTab %>% filter(hgnc_symbol %in% nameList) %>%
mutate(trisomy19 = patMeta[match(patID, patMeta$Patient.ID),]$trisomy19) %>%
mutate(status = ifelse(trisomy19 %in% 1,"trisomy19","WT"),
name = hgnc_symbol) %>%
mutate(status=factor(status, levels = c("WT","trisomy19")))
pList <- plotBox(plotTab, pValTabel = resList, y_lab = "Protein expression")
tri19Box<-cowplot::plot_grid(plotlist= pList, ncol=2)
tri19Box
protExprTab <- sumToTidy(protCLL) %>%
filter(chromosome_name == "19", IGHV.status == "M", trisomy12 == 1) %>%
mutate(id = ensembl_gene_id, patID = colID, expr = log2Norm_combat, type = "Protein") %>%
select(id, patID, expr, type)
rnaExprTab <- counts(dds[rownames(dds) %in% protExprTab$id,
colnames(dds) %in% protExprTab$patID], normalized= TRUE) %>%
as_tibble(rownames = "id") %>%
pivot_longer(-id, names_to = "patID", values_to = "count") %>%
mutate(expr = log2(count)) %>%
select(id, patID, expr) %>% mutate(type = "RNA")
comExprTab <- bind_rows(rnaExprTab, protExprTab) %>%
mutate(trisomy19 = patMeta[match(patID, patMeta$Patient.ID),]$trisomy19) %>%
filter(!is.na(trisomy19)) %>% mutate(cnv = ifelse(trisomy19 %in% 1, "trisomy19","WT"))
plotTab <- comExprTab %>%
group_by(id,type) %>% mutate(zscore = (expr-mean(expr))/sd(expr)) %>%
group_by(id, cnv, type) %>% summarise(meanExpr = mean(zscore, na.rm=TRUE)) %>%
ungroup()
dosagePlot <- ggplot(plotTab, aes(x=meanExpr, fill = cnv, col=cnv)) +
geom_histogram(position = "identity", alpha=0.5, bins=30) + facet_wrap(~type, scale = "fixed") +
scale_fill_manual(values = c(WT = "grey80", trisomy19 = colList[2]), name = "") +
scale_color_manual(values = c(WT = "grey80", trisomy19 = colList[2]), name = "") +
#xlim(-1,1) +
theme_full + xlab("Mean Z-score") +
theme(strip.text = element_text(size =20), legend.position = c(0.1,0.9), legend.background = element_rect(fill = NA))
dosagePlot
ggsave("tri19_dosage_effect.pdf", height = 3, width = 8)
plotTab <- comExprTab %>%
group_by(id,type) %>% mutate(zscore = (expr-mean(expr))/sd(expr)) %>%
group_by(id, cnv, type) %>% summarise(meanExpr = mean(zscore, na.rm=TRUE)) %>%
ungroup()
dosagePlot <- ggplot(plotTab, aes(x=meanExpr, fill = cnv, col=cnv)) +
geom_histogram(position = "identity", alpha=0.5, bins=30) + facet_wrap(~type, scale = "fixed") +
scale_fill_manual(values = c(WT = "grey80", trisomy19 = colList[2]), name = "") +
scale_color_manual(values = c(WT = "grey80", trisomy19 = colList[2]), name = "") +
xlim(-1,1.5) +
theme_full + xlab("Mean Z-score") +
theme(strip.text = element_text(size =20), legend.position = c(0.1,0.9), legend.background = element_rect(fill = NA))
dosagePlot
ggsave("tri19_dosage_effect.pdf", height = 3, width = 8)
load("../output/deResList.RData")
load("../output/deResListRNA.RData")
testTabProt <- resList %>% mutate(chr = rowData(protCLL[id,])$chromosome_name) %>%
filter(Gene == paste0("trisomy",chr)) %>%
select(name, log2FC, Gene) %>% mutate(type = "Protein")
testTabRNA <- resListRNA %>% mutate(chr = rowData(dds[id,])$chromosome) %>%
filter(Gene == paste0("trisomy",chr)) %>%
select(name, log2FC, Gene) %>% mutate(type = "RNA")
overGene <- intersect(testTabProt$name, testTabRNA$name)
testTab <- bind_rows(testTabProt, testTabRNA) %>%
filter(name %in% overGene)
plotTab <- lapply(seq(-2,2, length.out = 50), function(foldCut) {
filTab <- mutate(testTab, pass = log2FC > foldCut) %>%
group_by(Gene, type) %>% summarise(n = sum(pass),per = sum(pass)/length(pass)) %>%
mutate(cut = foldCut)
}) %>% bind_rows() %>%
mutate(group =paste0(Gene,"_",type))
ggplot(plotTab, aes(x=cut, y = per))+
geom_line(aes(col = Gene, linetype = type),size=1) +
scale_color_manual(values = c(trisomy12 = colList[1],trisomy19=colList[2]), name = "") +
scale_linetype_discrete(name = "") +
coord_cartesian(xlim=c(-1,1.5)) +
ylab("Cumulative fraction") +
xlab("log2 (fold change)") +
theme_full +
theme(legend.position = c(0.85,0.75))
ggsave("buffer_Tri12vsTri19.pdf", height = 5, width = 5)
ggplot(plotTab, aes(x=cut, y = per))+
geom_line(aes(col = Gene, linetype = type),size=1) +
scale_color_manual(values = c(trisomy12 = colList[1],trisomy19=colList[2]), name = "") +
scale_linetype_discrete(name = "") +
coord_cartesian(xlim=c(-1,1.5)) +
ylab("Cumulative fraction") +
xlab("log2 (fold change)") +
theme_full +
theme(legend.position = c(0.85,0.75),
axis.text = element_text(size=15),
axis.title = element_text(size=15))
ggsave("buffer_Tri12vsTri19.pdf", height = 5, width = 5)
ggplot(plotTab, aes(x=cut, y = per))+
geom_line(aes(col = Gene, linetype = type),size=1) +
scale_color_manual(values = c(trisomy12 = colList[1],trisomy19=colList[2]), name = "") +
scale_linetype_discrete(name = "") +
coord_cartesian(xlim=c(-1,1.5)) +
ylab("Cumulative fraction") +
xlab("log2 (fold change)") +
theme_full +
theme(legend.position = c(0.85,0.75),
axis.text = element_text(size=15),
axis.title = element_text(size=15),
legend.text = element_text(size=15))
ggsave("buffer_Tri12vsTri19.pdf", height = 5, width = 5)
ggplot(plotTab, aes(x=cut, y = per))+
geom_line(aes(col = Gene, linetype = type),size=1) +
scale_color_manual(values = c(trisomy12 = colList[1],trisomy19=colList[2]), name = "") +
scale_linetype_discrete(name = "") +
coord_cartesian(xlim=c(-1,1.5)) +
ylab("Cumulative fraction") +
xlab("log2 (fold change)") +
theme_full +
theme(legend.position = c(0.80,0.75),
axis.text = element_text(size=15),
axis.title = element_text(size=15),
legend.text = element_text(size=15))
ggsave("buffer_Tri12vsTri19.pdf", height = 5, width = 5)
testTab <- bufferTab %>% mutate(inComplex = ifelse(uniprotID %in% c(int_pairs$ProtA,int_pairs$ProtB),
"complex in","complex out")) %>%
group_by(inComplex) %>% mutate(n = length(name)) %>%
mutate(xLabel = sprintf("%s\n(N=%s)",inComplex,n))
int_pairs <- read_delim("../data/proteins_in_complexes", delim = "\t") %>%
mutate(Reactome = grepl("Reactome",Evidence_supporting_the_interaction),
Corum = grepl("Corum",Evidence_supporting_the_interaction)) %>%
dplyr::filter(ProtA %in% rownames(protSub) & ProtB %in% rownames(protSub)) %>%
mutate(pair=map2_chr(ProtA, ProtB, ~paste0(sort(c(.x,.y)), collapse = "-"))) %>%
mutate(database = case_when(
Reactome & Corum ~ "both",
Reactome & !Corum ~ "Reactome",
!Reactome & Corum ~ "Corum",
TRUE ~ "other"
)) %>% mutate(inComplex = "yes")
int_pairs <- read_csv2("../output/int_pairs.csv")
testTab <- bufferTab %>% mutate(inComplex = ifelse(uniprotID %in% c(int_pairs$ProtA,int_pairs$ProtB),
"complex in","complex out")) %>%
group_by(inComplex) %>% mutate(n = length(name)) %>%
mutate(xLabel = sprintf("%s\n(N=%s)",inComplex,n))
#subset samples and genes
overSampe <- intersect(colnames(ddsCLL), colnames(protCLL))
overGene <- intersect(rownames(ddsCLL), rowData(protCLL)$ensembl_gene_id)
ddsSub <- ddsCLL[overGene, overSampe]
protSub <- protCLL[match(overGene, rowData(protCLL)$ensembl_gene_id),overSampe]
rowData(ddsSub)$uniprotID <- rownames(protSub)[match(rownames(ddsSub),rowData(protSub)$ensembl_gene_id)]
#vst
ddsSub.vst <- ddsSub
assay(ddsSub.vst) <- log2(counts(ddsSub, normalized=TRUE) +1)
#ddsSub.vst <- varianceStabilizingTransformation(ddsSub)
#design(ddsSub) <- ~ trisomy12 + IGHV
#deRes <- DESeq(ddsSub, betaPrior = TRUE)
rnaRes <- resListRNA %>% filter(Gene == "trisomy12") %>%
mutate(chrom = rowData(dds[id,])$chromosome) %>%
#filter(Chr == "12") %>%
#mutate(adj.P.Val = p.adjust(P.Value, method = "BH")) %>%
dplyr::rename(geneID = id, log2FC.rna = log2FC,
pvalue.rna = P.Value, padj.rna = adj.P.Val, stat.rna= t) %>%
arrange(pvalue.rna) %>% distinct(name, .keep_all = TRUE) %>%
select(geneID, name, log2FC.rna, pvalue.rna, padj.rna, stat.rna, chrom)
protRes <- resList %>% filter(Gene == "trisomy12") %>%
mutate(Chr = rowData(protCLL[id,])$chromosome_name) %>%
#filter(Chr == "12") %>%
#mutate(adj.P.Val = p.adjust(P.Value, method= "BH")) %>%
dplyr::rename(uniprotID = id,
pvalue = P.Value, padj = adj.P.Val) %>%
#mutate(geneID = rowData(protCLL[uniprotID,])$ensembl_gene_id) %>%
select(name, uniprotID, log2FC, pvalue, padj, t) %>%
dplyr::rename(stat =t) %>%
arrange(pvalue) %>% distinct(name,.keep_all = TRUE) %>%
as_tibble()
allRes <- left_join(protRes, rnaRes, by = "name") %>%
filter(!is.na(stat), !is.na(stat.rna))
fdrCut <- 0.05
bufferTab <- allRes %>% filter(chrom == "12", stat.rna > 0) %>%
ungroup() %>%
mutate(stat.prot.sqrt = sqrt(stat),
stat.prot.center = stat.prot.sqrt - mean(stat.prot.sqrt,na.rm= TRUE)) %>%
mutate(score = -stat.prot.center*stat.rna,
diffFC = log2FC.rna-log2FC) %>%
mutate(ifBuffer = case_when(
padj <= fdrCut & padj.rna <= fdrCut & stat > 0 ~ "non-Buffered",
padj > fdrCut & padj.rna <= fdrCut ~ "Buffered",
padj < fdrCut & padj.rna > fdrCut & stat > 0 ~ "Enhanced",
TRUE ~ "Undetermined"
)) %>%
arrange(desc(score))
bufferTab %>% select(name, geneID, ifBuffer, score, log2FC, padj, log2FC.rna, padj.rna) %>%
mutate_if(is.numeric, formatC, digits=2) %>%
DT::datatable()
sumTab <- bufferTab %>% group_by(ifBuffer) %>%
summarise(n = length(name))
bufferPlot <- ggplot(sumTab, aes(x=ifBuffer, y = n)) +
geom_bar(aes(fill = ifBuffer), stat="identity", width = 0.7) +
geom_text(aes(label = paste0("n=", n)),vjust=-1,col=colList[1]) +
scale_fill_manual(values =c(Buffered = colList[1],
Enhanced = colList[4],
`non-Buffered` = colList[2],
Undetermined = "grey50")) +
theme_half + theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=0.5),
legend.position = "none") +
ylab("Number of proteins") + ylim(0,120) +xlab("")
bufferPlot
ggsave("tri12_sum_buffer_number.pdf", width =4, height = 4)
int_pairs <- read_csv2("../output/int_pairs.csv")
testTab <- bufferTab %>% mutate(inComplex = ifelse(uniprotID %in% c(int_pairs$ProtA,int_pairs$ProtB),
"complex in","complex out")) %>%
group_by(inComplex) %>% mutate(n = length(name)) %>%
mutate(xLabel = sprintf("%s\n(N=%s)",inComplex,n))
tRes <- t.test(diffFC~inComplex, testTab)
pVal <- formatC(tRes$p.value, digits = 1, format="e")
pLab <- bquote(italic("P")~"="~.(pVal))
ggplot(testTab, aes(x=xLabel, y=diffFC)) +
geom_violin(aes(fill = xLabel), trim=FALSE) +
stat_summary(fun.data="mean_sdl", mult=1,
geom="crossbar", width=0.05) +
scale_fill_manual(values = colList[4:5]) +
theme_full +
theme(legend.position = "none") +
xlab("") + ylab("log2(RNA fold change) - log2(protein fold change)") +
annotate("text", label = pLab , x=Inf, y=Inf, hjust=1.2, vjust=3)
ggsave("bufferComplexViolin.pdf", height = 6, width = 5)
testTab <- bufferTab %>% mutate(inComplex = ifelse(uniprotID %in% c(int_pairs$ProtA,int_pairs$ProtB),
"complex in","complex out")) %>%
group_by(inComplex) %>% mutate(n = length(name)) %>%
mutate(xLabel = sprintf("%s\n(N=%s)",inComplex,n))
tRes <- t.test(diffFC~inComplex, testTab)
pVal <- formatC(tRes$p.value, digits = 1, format="e")
pLab <- bquote(italic("P")~"="~.(pVal))
ggplot(testTab, aes(x=xLabel, y=diffFC)) +
geom_violin(aes(fill = xLabel), trim=FALSE) +
stat_summary(fun.data="mean_sdl", mult=1,
geom="crossbar", width=0.05) +
scale_fill_manual(values = colList[4:5]) +
theme_full +
xlab("") + ylab("log2(RNA fold change) - log2(protein fold change)") +
annotate("text", label = pLab , x=Inf, y=Inf, hjust=1.2, vjust=3,size=5) +
theme(legend.position = "none",
axis.text = element_text(size=15),
axis.title = element_text(size=15))
ggsave("bufferComplexViolin.pdf", height = 6, width = 5)
testTab <- bufferTab %>% mutate(inComplex = ifelse(uniprotID %in% c(int_pairs$ProtA,int_pairs$ProtB),
"complex in","complex out")) %>%
group_by(inComplex) %>% mutate(n = length(name)) %>%
mutate(xLabel = sprintf("%s\n(N=%s)",inComplex,n))
tRes <- t.test(diffFC~inComplex, testTab)
pVal <- formatC(tRes$p.value, digits = 1, format="e")
pLab <- bquote(italic("P")~"="~.(pVal))
ggplot(testTab, aes(x=xLabel, y=diffFC)) +
geom_violin(aes(fill = xLabel), trim=FALSE) +
stat_summary(fun.data="mean_sdl", mult=1,
geom="crossbar", width=0.05) +
scale_fill_manual(values = colList[4:5]) +
theme_full +
xlab("") + ylab("log2(RNA fold change) - log2(protein fold change)") +
annotate("text", label = pLab , x=Inf, y=Inf, hjust=1.2, vjust=3,size=8) +
theme(legend.position = "none",
axis.text = element_text(size=15),
axis.title = element_text(size=15))
ggsave("bufferComplexViolin.pdf", height = 6, width = 5)
testTab <- bufferTab %>% mutate(inComplex = ifelse(uniprotID %in% c(int_pairs$ProtA,int_pairs$ProtB),
"complex in","complex out")) %>%
group_by(inComplex) %>% mutate(n = length(name)) %>%
mutate(xLabel = sprintf("%s\n(N=%s)",inComplex,n))
tRes <- t.test(diffFC~inComplex, testTab)
pVal <- formatC(tRes$p.value, digits = 1, format="e")
pLab <- bquote(italic("P")~"="~.(pVal))
ggplot(testTab, aes(x=xLabel, y=diffFC)) +
geom_violin(aes(fill = xLabel), trim=FALSE) +
stat_summary(fun.data="mean_sdl", mult=1,
geom="crossbar", width=0.05) +
scale_fill_manual(values = colList[4:5]) +
theme_full +
xlab("") + ylab("log2(RNA fold change) - log2(protein fold change)") +
annotate("text", label = pLab , x=Inf, y=Inf, hjust=1.2, vjust=3,size=5) +
theme(legend.position = "none",
axis.text = element_text(size=15),
axis.title = element_text(size=15))
ggsave("bufferComplexViolin.pdf", height = 6, width = 5)
testTab <- bufferTab %>% mutate(inComplex = ifelse(uniprotID %in% c(int_pairs$ProtA,int_pairs$ProtB),
"complex in","complex out")) %>%
group_by(inComplex) %>% mutate(n = length(name)) %>%
mutate(xLabel = sprintf("%s\n(N=%s)",inComplex,n))
tRes <- t.test(diffFC~inComplex, testTab)
pVal <- formatC(tRes$p.value, digits = 1, format="e")
pLab <- bquote(italic("P")~"="~.(pVal))
ggplot(testTab, aes(x=xLabel, y=diffFC)) +
geom_violin(aes(fill = xLabel), trim=FALSE) +
stat_summary(fun.data="mean_sdl", mult=1,
geom="crossbar", width=0.05) +
scale_fill_manual(values = colList[4:5]) +
theme_full +
xlab("") + ylab("log2(RNA fold change) - log2(protein fold change)") +
annotate("text", label = pLab , x=Inf, y=Inf, hjust=1.2, vjust=2.5,size=5) +
theme(legend.position = "none",
axis.text = element_text(size=15),
axis.title = element_text(size=15))
ggsave("bufferComplexViolin.pdf", height = 6, width = 5)
testTab <- bufferTab %>% mutate(inComplex = ifelse(uniprotID %in% c(int_pairs$ProtA,int_pairs$ProtB),
"complex in","complex out")) %>%
group_by(inComplex) %>% mutate(n = length(name)) %>%
mutate(xLabel = sprintf("%s\n(N=%s)",inComplex,n))
tRes <- t.test(diffFC~inComplex, testTab)
pVal <- formatC(tRes$p.value, digits = 1, format="e")
pLab <- bquote(italic("P")~"="~.(pVal))
ggplot(testTab, aes(x=xLabel, y=diffFC)) +
geom_violin(aes(fill = xLabel), trim=FALSE) +
stat_summary(fun.data="mean_sdl", mult=1,
geom="crossbar", width=0.05) +
scale_fill_manual(values = colList[4:5]) +
theme_full +
xlab("") + ylab("log2(RNA fold change) - log2(protein fold change)") +
annotate("text", label = pLab , x=Inf, y=Inf, hjust=1.2, vjust=2.5,size=5) +
theme(legend.position = "none",
axis.text = element_text(size=15),
axis.title = element_text(size=15))
ggsave("bufferComplexViolin.pdf", height = 6, width = 4.5)
testTab <- bufferTab %>% mutate(inComplex = ifelse(uniprotID %in% c(int_pairs$ProtA,int_pairs$ProtB),
"complex in","complex out")) %>%
group_by(inComplex) %>% mutate(n = length(name)) %>%
mutate(xLabel = sprintf("%s\n(N=%s)",inComplex,n))
tRes <- t.test(diffFC~inComplex, testTab)
pVal <- formatC(tRes$p.value, digits = 1, format="e")
pLab <- bquote(italic("P")~"="~.(pVal))
ggplot(testTab, aes(x=xLabel, y=diffFC)) +
geom_violin(aes(fill = xLabel), trim=FALSE) +
stat_summary(fun.data="mean_sdl", mult=1,
geom="crossbar", width=0.05) +
scale_fill_manual(values = colList[4:5]) +
theme_full +
xlab("") + ylab("log2(RNA fold change) - log2(protein fold change)") +
annotate("text", label = pLab , x=Inf, y=Inf, hjust=1.2, vjust=2,size=5) +
theme(legend.position = "none",
axis.text = element_text(size=15),
axis.title = element_text(size=15))
ggsave("bufferComplexViolin.pdf", height = 6, width = 4.5)
testTab <- bufferTab %>% mutate(inComplex = ifelse(uniprotID %in% c(int_pairs$ProtA,int_pairs$ProtB),
"complex in","complex out")) %>%
group_by(inComplex) %>% mutate(n = length(name)) %>%
mutate(xLabel = sprintf("%s\n(N=%s)",inComplex,n))
tRes <- t.test(diffFC~inComplex, testTab)
pVal <- formatC(tRes$p.value, digits = 1, format="e")
pLab <- bquote(italic("P")~"="~.(pVal))
ggplot(testTab, aes(x=xLabel, y=diffFC)) +
geom_violin(aes(fill = xLabel), trim=FALSE) +
stat_summary(fun.data="mean_sdl", mult=1,
geom="crossbar", width=0.05) +
scale_fill_manual(values = colList[4:5]) +
theme_full +
xlab("") + ylab("log2(RNA fold change) - log2(protein fold change)") +
annotate("text", label = pLab , x=Inf, y=Inf, hjust=1.2, vjust=2,size=6) +
theme(legend.position = "none",
axis.text = element_text(size=15),
axis.title = element_text(size=15))
ggsave("bufferComplexViolin.pdf", height = 6, width = 4.5)
testTab <- bufferTab %>% mutate(inComplex = ifelse(uniprotID %in% c(int_pairs$ProtA,int_pairs$ProtB),
"complex in","complex out")) %>%
group_by(inComplex) %>% mutate(n = length(name)) %>%
mutate(xLabel = sprintf("%s\n(N=%s)",inComplex,n))
tRes <- t.test(diffFC~inComplex, testTab)
pVal <- formatC(tRes$p.value, digits = 1, format="e")
pLab <- bquote(italic("P")~"="~.(pVal))
ggplot(testTab, aes(x=xLabel, y=diffFC)) +
geom_violin(aes(fill = xLabel), trim=FALSE) +
stat_summary(fun.data="mean_sdl", mult=1,
geom="crossbar", width=0.05) +
scale_fill_manual(values = colList[4:5]) +
theme_full +
xlab("") + ylab("log2(RNA fold change) - log2(protein fold change)") +
annotate("text", label = pLab , x=Inf, y=Inf, hjust=1.2, vjust=2,size=6) +
theme(legend.position = "none",
axis.text.y = element_text(size=15),
axis.text.x = element_text(size=18),
axis.title = element_text(size=15))
ggsave("bufferComplexViolin.pdf", height = 6, width = 4.5)
rnaAll <- dds[rowData(dds)$biotype %in% "protein_coding" & !rowData(dds)$symbol %in% c("",NA),] #all protein coding gene as background
protList <- filter(bufferTab, ifBuffer == "non-Buffered")$name
refList <- rowData(rnaAll)$symbol
enRes <- runFisher(protList, refList, gmts$H, pCut =0.01, ifFDR = TRUE,removePrefix = "HALLMARK_",
plotTitle = "Non-buffered proteins", insideLegend = TRUE,
setName = "HALLMARK gene set", setMap = setMap)
bufferEnrich <- enRes$enrichPlot + theme(plot.margin = margin(1,3,1,1, unit = "cm"))
bufferEnrich
rnaAll <- dds[rowData(dds)$biotype %in% "protein_coding" & !rowData(dds)$symbol %in% c("",NA),] #all protein coding gene as background
protList <- filter(bufferTab, ifBuffer == "non-Buffered")$name
refList <- rowData(rnaAll)$symbol
enRes <- runFisher(protList, refList, gmts$H, pCut =0.01, ifFDR = TRUE,removePrefix = "HALLMARK_",
plotTitle = "Non-buffered proteins", insideLegend = TRUE,
setName = "HALLMARK gene set", setMap = setMap)
bufferEnrich <- enRes$enrichPlot + theme(plot.margin = margin(1,3,1,1, unit = "cm"))
bufferEnrich
ggsave("tri12_nonBuffer_enrich.odf", height = 3.5, width = 7)
rnaAll <- dds[rowData(dds)$biotype %in% "protein_coding" & !rowData(dds)$symbol %in% c("",NA),] #all protein coding gene as background
protList <- filter(bufferTab, ifBuffer == "non-Buffered")$name
refList <- rowData(rnaAll)$symbol
enRes <- runFisher(protList, refList, gmts$H, pCut =0.01, ifFDR = TRUE,removePrefix = "HALLMARK_",
plotTitle = "Non-buffered proteins", insideLegend = TRUE,
setName = "HALLMARK gene set", setMap = setMap)
bufferEnrich <- enRes$enrichPlot + theme(plot.margin = margin(1,3,1,1, unit = "cm"))
bufferEnrich
ggsave("tri12_nonBuffer_enrich.pdf", height = 3.5, width = 7)
library(limma)
library(DESeq2)
library(proDA)
library(tidygraph)
library(igraph)
library(ggraph)
library(pheatmap)
library(ComplexHeatmap)
library(cowplot)
library(ggbeeswarm)
library(SummarizedExperiment)
library(tidyverse)
#load datasets
load("../data/patMeta_enc.RData")
load("../data/ddsrna_enc.RData")
load("../data/proteomic_explore_enc.RData")
load("../output/deResList.RData") #precalculated differential expression
load("../output/deResListRNA.RData")
#protCLL <- protCLL[rowData(protCLL)$uniqueMap,]
source("../code/utils.R")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE,dev = c("png","pdf"))
resList <- filter(resList, Gene == "IGHV.status") %>%
#mutate(adj.P.Val = adj.P.global) %>% #use IHW corrected P-value
mutate(Chr = rowData(protCLL[id,])$chromosome_name)
resList %>% filter(adj.P.Val <= 0.05) %>%
select(name, Chr,logFC, P.Value, adj.P.Val) %>%
mutate_if(is.numeric, formatC, digits=2) %>%
DT::datatable()
sumTab <- filter(resList, adj.P.Val < 0.05) %>%
mutate(dir = ifelse(t>0, "up","down"))
table(sumTab$dir)
proList <- filter(resList, !is.na(name), adj.P.Val < 0.01) %>% distinct(name, .keep_all = TRUE) %>% pull(id)
plotMat <- assays(protCLL)[["QRILC_combat"]][proList,]
rownames(plotMat) <- rowData(protCLL[proList,])$hgnc_symbol
colAnno <- filter(patMeta, Patient.ID %in% colnames(protCLL)) %>%
select(Patient.ID, trisomy12, IGHV.status, Methylation_Cluster) %>%
arrange(IGHV.status) %>%
data.frame() %>% column_to_rownames("Patient.ID")
colAnno$trisomy12 <- ifelse(colAnno$trisomy12 %in% 1, "yes","no")
plotMat <- jyluMisc::mscale(plotMat, censor = 5)
plotMat <- plotMat[,rownames(colAnno)]
annoCol <- list(trisomy12 = c(yes = "black",no = "grey80"),
IGHV.status = c(M = colList[4], U = colList[3]),
onChr12 = c(yes = colList[1],no = "white"))
pheatmap::pheatmap(plotMat, annotation_col = colAnno, scale = "none", cluster_cols = TRUE,
clustering_method = "ward.D2",
color = colorRampPalette(c(colList[2],"white",colList[1]))(100),
breaks = seq(-5,5, length.out = 101), annotation_colors = annoCol,
show_rownames = FALSE, show_colnames = FALSE,
treeheight_row = 0)
plotTab <- resList
nameList <- c("BANK1", "CASP3", "STAT2", "ZAP70")
ighvVolcano <- plotVolcano(plotTab, fdrCut =0.05, x_lab="log2FoldChange", posCol = colList[1], negCol = colList[2],
plotTitle = "IGHV status (M-CLL versus U-CLL)", ifLabel = TRUE, labelList = nameList)
ighvVolcano
ggsave("IGHV_volcano.pdf", height = 6, width = 6)
plotTab <- resList
nameList <- c("BANK1", "CASP3", "STAT2", "ZAP70")
ighvVolcano <- plotVolcano(plotTab, fdrCut =0.05, x_lab="log2FoldChange", posCol = colList[1], negCol = colList[2],
plotTitle = "IGHV status (M-CLL versus U-CLL)", ifLabel = TRUE, labelList = nameList)
ighvVolcano
ggsave("IGHV_volcano.pdf", height = 6, width = 6)
plotTab <- resList
nameList <- c("BANK1", "CASP3", "STAT2", "ZAP70")
ighvVolcano <- plotVolcano(plotTab, fdrCut =0.05, x_lab=bquote("log"[2]*"(fold change)", posCol = colList[1], negCol = colList[2],
plotTitle = "IGHV status (M-CLL versus U-CLL)", ifLabel = TRUE, labelList = nameList)
ighvVolcano
plotTab <- resList
nameList <- c("BANK1", "CASP3", "STAT2", "ZAP70")
ighvVolcano <- plotVolcano(plotTab, fdrCut =0.05, x_lab=bquote("log"[2]*"(fold change)"), posCol = colList[1], negCol = colList[2],
plotTitle = "IGHV status (M-CLL versus U-CLL)", ifLabel = TRUE, labelList = nameList)
ighvVolcano
ggsave("IGHV_volcano.pdf", height = 6, width = 6)
